<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <!--声明项目描述符遵循哪一个POM模型版本。-->
    <modelVersion>4.0.0</modelVersion>

    <!--项目的全球唯一标识符，通常使用全限定的包名区分该项目和其他项目。并且构建时生成的路径也是由此生成， 如com.mycompany.app生成的相对路径为：/com/mycompany/app-->
    <groupId>com.flysnow.palace</groupId>
    <!-- 构件的标识符，它和group ID一起唯一标识一个构件。换句话说，你不能有两个不同的项目拥有同样的artifact ID和groupID；
        在某个特定的group ID下，artifact ID也必须是唯一的。构件是项目产生的或使用的一个东西，Maven为项目产生的构件包括：JARs，源 码，二进制发布和WARs等。-->
    <artifactId>palace-java</artifactId>
    <!--项目当前版本，格式为:主版本.次版本.增量版本-限定版本号-->
    <version>1.0-SNAPSHOT</version>

    <!-- 添加packaging节点指定为pom工程 -->
    <packaging>pom</packaging>
    <!--项目的名称, Maven产生的文档用-->
    <name>palace-java</name>
    <!--项目主页的URL, Maven产生的文档用-->
    <url>http://www.flysnow.palace.com/</url>
    <!-- 项目的详细描述, Maven 产生的文档用。  当这个元素能够用HTML格式描述时（例如，CDATA中的文本会被解析器忽略，就可以包含HTML标 签），
        不鼓励使用纯文本描述。如果你需要修改产生的web站点的索引页面，你应该修改你自己的索引页文件，而不是调整这里的文档。-->
    <description>A maven project to study maven.</description>

    <!-- 添加module.添加普通maven子工程的时候父工程能自动添加module,但是如果添加的是springboot的子工程,父工程的pom不会自动添加module.  -->
    <modules>
        <module>palace-java-basics</module>
        <module>palace-java-springboot01</module>
        <module>palace-java-tomacat01</module>
    </modules>
</project>